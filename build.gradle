/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Martin' at '13-5-16 13:17' with Gradle 2.11
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

targetCompatibility = '1.7'
sourceCompatibility = '1.7'

group = "org.encryptor4j"
archivesBaseName = "encryptor4j"
version = "0.1.2"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.bouncycastle:bcprov-jdk15on:1.63'
    compile 'commons-io:commons-io:2.5'
    compile 'commons-cli:commons-cli:1.3.1'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
        // optional proxy if running behind a firewall (comment the following line if no proxy)
        // proxy(host: proxyHost, port: proxyPort as int, type: 'http')
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
        // optional proxy if running behind a firewall (comment the following line if no proxy)
        // proxy(host: proxyHost, port: proxyPort as int, type: 'http')
      }

      pom.project {
        name 'Encryptor4j'
        packaging 'jar'
        artifactId 'encryptor4j'
        description 'Strong encryption for Java simplified'
        url 'http://encryptor4j.org'

        scm {
          connection 'scm:git:git://github.com/martinwithaar/Encryptor4j.git'
          developerConnection 'scm:git:ssh://github.com:martinwithaar/Encryptor4j.git'
          url 'https://github.com/martinwithaar/Encryptor4j/tree/master'
        }

        licenses {
          license {
            name 'MIT License'
            url 'https://github.com/martinwithaar/Encryptor4j/blob/master/LICENSE'
          }
        }

        developers {
          developer {
            id 'martinwithaar'
            name 'Martin Withaar'
            email 'martin.withaar@gmail.com'
          }
          developer {
            id 'sishbi'
            name 'Simon Billingsley'
            email 'simon@sishbi.me.uk'
          }
        }
      }
    }
  }
}
